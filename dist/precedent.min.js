"use strict";!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Precedent=t()}}((function(){return function t(e,r,n){function a(s,f){if(!r[s]){if(!e[s]){var P="function"==typeof require&&require;if(!f&&P)return P(s,!0);if(u)return u(s,!0);var i=new Error("Cannot find module '"+s+"'");throw i.code="MODULE_NOT_FOUND",i}var p=r[s]={exports:{}};e[s][0].call(p.exports,(function(t){return a(e[s][1][t]||t)}),p,p.exports,t,e,r,n)}return r[s].exports}for(var u="function"==typeof require&&require,s=0;s<n.length;s++)a(n[s]);return a}({1:[function(t,e,r){
/**
      * Precedent Meta-Templating
      *
      * @license     MIT
      *
      * @author      Steven Velozo <steven@velozo.com>
      *
      * @description Process text streams, parsing out meta-template expressions.
      */
var n=t("./WordTree.js"),a=t("./StringParser.js");e.exports=class{constructor(){this.WordTree=new n,this.StringParser=new a,this.ParseTree=this.WordTree.ParseTree}addPattern(t,e,r){return this.WordTree.addPattern(t,e,r)}parseString(t,e){return this.StringParser.parseString(t,this.ParseTree,e)}}},{"./StringParser.js":2,"./WordTree.js":3}],2:[function(t,e,r){e.exports=class{constructor(){}newParserState(t){return{ParseTree:t,Asynchronous:!1,Output:"",OutputBuffer:"",Pattern:{},PatternMatch:!1,PatternMatchEnd:!1}}appendOutputBuffer(t,e){e.OutputBuffer+=t}flushOutputBuffer(t){t.Output+=t.OutputBuffer,t.OutputBuffer=""}resetOutputBuffer(t){return this.flushOutputBuffer(t),t.Pattern=!1,t.PatternStartNode=!1,t.StartPatternMatchComplete=!1,t.EndPatternMatchBegan=!1,t.PatternMatch=!1,!0}parseCharacter(t,e,r){if(e.PatternMatch)if(!e.StartPatternMatchComplete&&e.Pattern.hasOwnProperty(t))e.Pattern=e.Pattern[t],this.appendOutputBuffer(t,e);else if(e.EndPatternMatchBegan)if(e.Pattern.PatternEnd.hasOwnProperty(t)){if(e.Pattern=e.Pattern.PatternEnd[t],this.appendOutputBuffer(t,e),e.Pattern.hasOwnProperty("Parse"))return e.OutputBuffer=e.Pattern.Parse(e.OutputBuffer.substr(e.Pattern.PatternStartString.length,e.OutputBuffer.length-(e.Pattern.PatternStartString.length+e.Pattern.PatternEndString.length)),r),this.resetOutputBuffer(e)}else e.PatternStartNode.PatternEnd.hasOwnProperty(t)?(e.Pattern=e.PatternStartNode.PatternEnd[t],this.appendOutputBuffer(t,e)):(e.EndPatternMatchBegan=!1,this.appendOutputBuffer(t,e));else if(e.Pattern.hasOwnProperty("PatternEnd")){if(e.StartPatternMatchComplete||(e.StartPatternMatchComplete=!0,e.PatternStartNode=e.Pattern),this.appendOutputBuffer(t,e),e.Pattern.PatternEnd.hasOwnProperty(t)&&(e.EndPatternMatchBegan=!0,e.Pattern=e.Pattern.PatternEnd[t],e.Pattern.hasOwnProperty("Parse")))return e.OutputBuffer=e.Pattern.Parse(e.OutputBuffer.substr(e.Pattern.PatternStartString.length,e.OutputBuffer.length-(e.Pattern.PatternStartString.length+e.Pattern.PatternEndString.length)),r),this.resetOutputBuffer(e)}else this.resetOutputBuffer(e);if(!e.PatternMatch){if(e.ParseTree.hasOwnProperty(t))return this.resetOutputBuffer(e),this.appendOutputBuffer(t,e),e.Pattern=e.ParseTree[t],e.PatternMatch=!0,!0;this.appendOutputBuffer(t,e)}return!1}parseString(t,e,r){let n=this.newParserState(e);for(var a=0;a<t.length;a++)this.parseCharacter(t[a],n,r);return this.flushOutputBuffer(n),n.Output}}},{}],3:[function(t,e,r){e.exports=class{constructor(){this.ParseTree={}}addChild(t,e){return t.hasOwnProperty(e)||(t[e]={}),t[e]}addEndChild(t,e){return t.hasOwnProperty("PatternEnd")||(t.PatternEnd={}),t.PatternEnd[e]={},t.PatternEnd[e]}addPattern(t,e,r){if(t.length<1)return!1;if("string"==typeof e&&e.length<1)return!1;let n=this.ParseTree;for(var a=0;a<t.length;a++)n=this.addChild(n,t[a],a);n.hasOwnProperty("PatternEnd")||(n.PatternEnd={});let u="string"==typeof e?e:t;for(let t=0;t<u.length;t++)n=this.addEndChild(n,u[t],t);return n.PatternStartString=t,n.PatternEndString=u,n.Parse="function"==typeof r?r:"string"==typeof r?()=>r:t=>t,!0}}},{}]},{},[1])(1)}));
//# sourceMappingURL=precedent.min.js.map
